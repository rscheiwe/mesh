[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mesh"
version = "0.1.0"
description = "Python Agent Graph Orchestration Engine - Build multi-agent workflows as executable graphs"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Richard Scheiwe", email = "rscheiwe@users.noreply.github.com"}
]
keywords = ["agents", "graph", "orchestration", "workflow", "llm", "ai", "streaming"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "pydantic>=2.0.0",
    "aiosqlite>=0.19.0",
    "openai>=1.0.0",
    "httpx>=0.24.0",
    "jsonpath-ng>=1.6.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
server = [
    "fastapi>=0.104.0",
    "sse-starlette>=1.8.0",
    "uvicorn>=0.24.0",
]
vel = [
    "vel @ git+https://github.com/rscheiwe/vel.git",
]
agents = [
    "openai-agents>=0.1.0",
]
all = [
    "mesh[dev,server,vel,agents]",
]

[project.urls]
Homepage = "https://github.com/rscheiwe/mesh"
Documentation = "https://github.com/rscheiwe/mesh#readme"
Repository = "https://github.com/rscheiwe/mesh"
Issues = "https://github.com/rscheiwe/mesh/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["mesh*"]

[tool.setuptools.package-data]
mesh = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "N", "W", "UP"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
]
